#!/bin/bash

#
# @description  Website analytics tool.
# @author	Marcelo CorrÃªa <macorrea-@hotmail.com>
# @requires     bash v4+, curl v7.56+, jq v1.6+, sysstat 10.1+
# @version	0.1
#


# Define ANSI escape codes for colors
GREEN='\033[32m'
B_GREEN='\u001b[32;1m'
BLUE='\033[34m'
YELLOW='\033[33m'
PINK='\033[35m'
RED='\033[31;47m'
CYAN='\033[30;46m'

HEADER_COLOR='\033[30;47m'
WHITE_BOLD='\033[1m'
NC='\033[0m'

function showHelp() {
    read -r -d '' help <<EOF
usage: analytx [DOMAIN] 
       analytx [COMMAND] [ARGS]

Available commands:

help                        Show this help

Use "analytx [COMMAND] --help" for more information about a command.
EOF

    echo "${help}"

}

function logo() {
    echo -e "${PINK}"
    echo " ______     __   __     ______     __         __  __     ______   __  __    "
    echo "/\\  __ \\   /\\ \"-.\\ \\   /\\  __ \\   /\\ \\       /\\ \\_\\ \\   /\\__  _\\ /\\_\\_\\_\\   "
    echo "\\ \\  __ \\  \\ \\ \\-.  \\  \\ \\  __ \\  \\ \\ \\____  \\ \\____ \\  \\/_/\\ \\/ \\/_/\\/_/_  "
    echo " \\ \\_\\ \\_\\  \\ \\_\\\\\"\\_\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\/\\_____\\    \\ \\_\\  /\\/_\\/\\_\\ "
    echo "  \\/_/\\/_/   \\/_/ \\/_/   \\/_/\\/_/   \\/_____/   \\/_____/     \\/_/   \\/_/\\/_/ "
    echo -e "\n${HEADER_COLOR}                                                                version 0.1 ${NC}"
}

domain=$1

domain="${domain#https://}"
# Remove "http://"
domain="${domain#http://}"

# echo "$domain"

if [[ $domain == '' ]]; then
    showHelp
    exit
fi

A=$(dig "${domain}" +short A | grep -v "Warning: Client COOKIE mismatch")
NS=$(dig "${domain}" +short NS | grep -v "Warning: Client COOKIE mismatch")
MX=$(dig "${domain}" +short MX | grep -v "Warning: Client COOKIE mismatch")
whois_output=$(whois "$domain")


if [ -z "$A" ]; then
    A="Unknown"
fi
if [ -z "$NS" ]; then
    NS="Unknown"
fi
if [ -z "$MX" ]; then
    MX="Unknown"
fi


if [[ "$whois_output" == *"No match for"* ]]; then
  whois_output="${RED}Not registered${NC}"
else
  whois_output="${B_GREEN}Registered${NC}"
fi

check_ssl=$(openssl s_client -connect "${domain}:443" -servername "${domain}" < /dev/null 2>/dev/null | openssl x509 -checkend 0 -noout)

if [ "${check_ssl}" ]; then
    ssl_status="Valid"
else
    ssl_status="Not valid"

fi

#
# Display the logo
#
logo
echo -e "
${CYAN} Analyzing ${NC} ${domain}

${WHITE_BOLD}A Entry:${NC}\n${A} 

${WHITE_BOLD}NS Entry:${NC}\n${NS} 

${WHITE_BOLD}MX Entry:${NC}\n${MX} 

${WHITE_BOLD}Whois:${NC}\n${whois_output}

${WHITE_BOLD}Access:${NC}\nwww.${domain}

${WHITE_BOLD}SSL Certificate:${NC}\n${ssl_status}
"
pageload=$(curl -s -w '%{time_total}' -o /dev/null "${domain}")
echo  -e "${WHITE_BOLD}PageLoad:${NC}\n${pageload}\n"




