#!/bin/bash

#
# @description  Website analytics tool.
# @author	Marcelo Corrêa <macorrea-@hotmail.com>
# @requires     bash v4+, curl v7.56+, jq v1.6+, sysstat 10.1+
# @version	0.1
#

#
# Define constants variables
#
BLUE='\033[34m'
PINK='\033[35m'
CYAN_B='\033[30;46m'
WHITE_BACKGROUND='\033[30;47m'
DEFAULT_COLOR='\033[0m'
VERSION='0.1.1'

#
# Methods
#
function showHelp() {
    read -r -d '' help <<EOF
usage: analytx [DOMAIN] 
       analytx [COMMAND] [ARGS]

Available commands:

help                        Show this help

Use "analytx --help" for more information about a command.
EOF

    echo "${help}"

}

function logo() {
    echo -e "${PINK}"
    echo " ______     __   __     ______     __         __  __     ______   __  __    "
    echo "/\\  __ \\   /\\ \"-.\\ \\   /\\  __ \\   /\\ \\       /\\ \\_\\ \\   /\\__  _\\ /\\_\\_\\_\\   "
    echo "\\ \\  __ \\  \\ \\ \\-.  \\  \\ \\  __ \\  \\ \\ \\____  \\ \\____ \\  \\/_/\\ \\/ \\/_/\\/_/_  "
    echo " \\ \\_\\ \\_\\  \\ \\_\\\\\"\\_\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\/\\_____\\    \\ \\_\\  /\\/_\\/\\_\\ "
    echo "  \\/_/\\/_/   \\/_/ \\/_/   \\/_/\\/_/   \\/_____/   \\/_____/     \\/_/   \\/_/\\/_/ "
    echo -e "\n${WHITE_BACKGROUND}                                                              version ${VERSION} ${DEFAULT_COLOR}"
}

function loading() {
    bars=( ' Analyzing |' ' Analyzing /' ' Analyzing -' ' Analyzing \\' ) 
    while true; do
        for i in "${bars[@]}"; do
            echo -ne "\r"
            echo -ne "${CYAN_B} \r$i ${DEFAULT_COLOR} ${domain} "
            sleep 0.05
        done
    done
}

function isDomainRegistered() {
    if [[ $1 == *"No match for"* ]]; then
        whois_status="Not registered"
        return 0
    fi
    whois_status="Registered"
}

#
# Parse argument
#
domain=$1
domain="${domain#https://}"
domain="${domain#http://}"

if [[ $domain == '' ]]; then
    showHelp
    exit
fi

#
# Display the logo
#
logo
echo -e "\e[?25l"

#
# Loading queries 
#
loading &
loadingPid=$!

#
# dig command
#
A=$(dig "${domain}" +short A | grep -v "Warning: Client COOKIE mismatch")
NS=$(dig "${domain}" +short NS | grep -v "Warning: Client COOKIE mismatch")
MX=$(dig "${domain}" +short MX | grep -v "Warning: Client COOKIE mismatch")

if [ -z "$A" ]; then
    A="Unknown"
fi
if [ -z "$NS" ]; then
    NS="Unknown"
fi
if [ -z "$MX" ]; then
    MX="Unknown"
fi

#
# whois command
#
whois_output=$(whois "$domain")
isDomainRegistered "${whois_output}"
registrar=$(echo "${whois_output}" | grep -i -m 1 "Registrar:" | sed 's/Registrar://I' | awk '{$1=$1};1')
registrant=$(echo "${whois_output}" | awk -F ':' '/Registrant Name/{print $2}' | sed 's/^\s*//')
owner=$(echo "${whois_output}" | grep -i -m 1 "owner:" | sed 's/owner://I' | awk '{$1=$1};1')
person=$(echo "${whois_output}" | grep -i -m 1 "person:" | sed 's/person://I' | awk '{$1=$1};1')

#
# openssl comand
#
ssl_status=$(openssl s_client -connect "${domain}:443" -servername "${domain}" < /dev/null 2>/dev/null | openssl x509 -noout -checkend 0)
ssl_issuer=$(openssl s_client -connect "${domain}:443" -servername "${domain}" < /dev/null 2>/dev/null | openssl x509 -noout -issuer)
ssl_dates=$(openssl s_client -connect "${domain}:443" -servername "${domain}" < /dev/null 2>/dev/null | openssl x509 -noout -dates | tr -d "\n")

#
# pageload
#
pageload=$(curl -s -w 'Lookup Time:\t\t%{time_namelookup}\nConnect Time:\t\t%{time_connect}\nPre-transfer Time:\t%{time_pretransfer}\nStart-transfer Time:\t%{time_starttransfer}\n\nTotal Time:\t\t%{time_total}\n' -o /dev/null "${domain}")

#
# Printing domain info
#
kill "$loadingPid"
echo -ne "\r"
echo -ne "${CYAN_B} \r Completed ✔ ${DEFAULT_COLOR} ${domain}\n"

echo -e "
${BLUE}A Record${DEFAULT_COLOR}\n${A} 

${BLUE}NS Record${DEFAULT_COLOR}\n${NS} 

${BLUE}MX Record${DEFAULT_COLOR}\n${MX} 

${BLUE}Whois${DEFAULT_COLOR}
Status: ${whois_status}
Registrar: ${registrar}
Registrant: ${registrant}
Owner: ${owner}
Person: ${person}
Access: \e[4mwww.${domain}\e[0m

${BLUE}SSL Certificate${DEFAULT_COLOR}
Status: ${ssl_status}
Issuer: ${ssl_issuer}
Date: ${ssl_dates}"

echo -e "
${BLUE}Page Load${DEFAULT_COLOR}
${pageload}"

echo -e "\e[?25h"